<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yajie.springboot.learn.dao.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.yajie.springboot.learn.entity.SysLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
    <result column="module_name" jdbcType="VARCHAR" property="moduleName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="request_uri" jdbcType="VARCHAR" property="requestUri" />
    <result column="request_method" jdbcType="VARCHAR" property="requestMethod" />
    <result column="request_params" jdbcType="VARCHAR" property="requestParams" />
    <result column="execute_time" jdbcType="BIGINT" property="executeTime" />
    <result column="remote_addr" jdbcType="INTEGER" property="remoteAddr" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, user_agent, module_name, content, request_uri, request_method, request_params, 
    execute_time, remote_addr, operator, create_time
  </sql>
  <select id="selectByExample" parameterType="com.yajie.springboot.learn.entity.SysLogCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yajie.springboot.learn.entity.SysLogCriteria">
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yajie.springboot.learn.entity.SysLog">
    insert into sys_log (id, type, user_agent, 
      module_name, content, request_uri, 
      request_method, request_params, execute_time, 
      remote_addr, operator, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, #{userAgent,jdbcType=VARCHAR}, 
      #{moduleName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, 
      #{requestMethod,jdbcType=VARCHAR}, #{requestParams,jdbcType=VARCHAR}, #{executeTime,jdbcType=BIGINT}, 
      #{remoteAddr,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yajie.springboot.learn.entity.SysLog">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userAgent != null">
        user_agent,
      </if>
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="requestUri != null">
        request_uri,
      </if>
      <if test="requestMethod != null">
        request_method,
      </if>
      <if test="requestParams != null">
        request_params,
      </if>
      <if test="executeTime != null">
        execute_time,
      </if>
      <if test="remoteAddr != null">
        remote_addr,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="userAgent != null">
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null">
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null">
        #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="executeTime != null">
        #{executeTime,jdbcType=BIGINT},
      </if>
      <if test="remoteAddr != null">
        #{remoteAddr,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yajie.springboot.learn.entity.SysLogCriteria" resultType="java.lang.Long">
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.userAgent != null">
        user_agent = #{record.userAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleName != null">
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUri != null">
        request_uri = #{record.requestUri,jdbcType=VARCHAR},
      </if>
      <if test="record.requestMethod != null">
        request_method = #{record.requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.requestParams != null">
        request_params = #{record.requestParams,jdbcType=VARCHAR},
      </if>
      <if test="record.executeTime != null">
        execute_time = #{record.executeTime,jdbcType=BIGINT},
      </if>
      <if test="record.remoteAddr != null">
        remote_addr = #{record.remoteAddr,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_log
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      request_method = #{record.requestMethod,jdbcType=VARCHAR},
      request_params = #{record.requestParams,jdbcType=VARCHAR},
      execute_time = #{record.executeTime,jdbcType=BIGINT},
      remote_addr = #{record.remoteAddr,jdbcType=INTEGER},
      operator = #{record.operator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yajie.springboot.learn.entity.SysLog">
    update sys_log
    <set>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="userAgent != null">
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null">
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null">
        request_uri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null">
        request_method = #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        request_params = #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="executeTime != null">
        execute_time = #{executeTime,jdbcType=BIGINT},
      </if>
      <if test="remoteAddr != null">
        remote_addr = #{remoteAddr,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yajie.springboot.learn.entity.SysLog">
    update sys_log
    set type = #{type,jdbcType=CHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      request_method = #{requestMethod,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      execute_time = #{executeTime,jdbcType=BIGINT},
      remote_addr = #{remoteAddr,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.yajie.springboot.learn.entity.SysLogCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>